
import type { Metadata } from "next";
import "@/assets/css/globals.css";
import { getMessages } from 'next-intl/server';
import ClientProvider from "@/components/client-provider";
import IntlClientProvider from "@/components/intl-client-provider"; // New client-side component

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

interface RootLayoutProps {
  children: React.ReactNode;
  params: {
    locale: string;
  };
}

export default async function RootLayout({
  children,
  params: { locale },
}: RootLayoutProps) {
  const messages = await getMessages({ locale }); // Pass locale to fetch correct messages

  return (
    <html lang={locale}>
      <body>
        <IntlClientProvider locale={locale} messages={messages}>
          <ClientProvider>{children}</ClientProvider>
        </IntlClientProvider>
      </body>
    </html>
  );
}













// import type { Metadata } from "next";
// import "@/assets/css/globals.css";
// import { NextIntlClientProvider } from 'next-intl'
// import { getMessages } from 'next-intl/server'
// import ClientProvider from "@/components/client-provider";

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

// interface RootLayoutProps {
//   children: React.ReactNode;
//   params: {
//     locale: string;
//   };
// }


// export default async function RootLayout({
//   children,
//   params: { locale },
// }: RootLayoutProps) {
//   const messages = await getMessages()
//   return (
//     <NextIntlClientProvider messages={messages}>
//       <html lang={locale}>
//         <body>
//           <ClientProvider>{children}</ClientProvider>
//         </body>
//       </html>
//     </NextIntlClientProvider>
//   );
// }